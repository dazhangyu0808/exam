/**
 * 排序后输出 id
 * @param {Array<Object>} list
 * @returns {Array<number>}
 * @example
 * [
 *  { id: 2, before: 1 },
 *  { id: 1, last: true },
 *  { id: 3, after: 1 },
 *  { id: 5, first: true },
 *  { id: 6, last: true },
 *  { id: 7, last: true },
 *  { id: 8, last: true },
 * ];
 * 输出为
 * [5, 2, 1, 3, 6, 7, 8];
 */
function parse(arr) {
	
}

/**
 * 将数组转换成树状结构
 * @param {Array} arr
 * @returns {Object}
 * @example
 * [
 *   { id: 1, name: 'i1' },
 *   { id: 2, name: 'i2', parentId: 1 },
 *   { id: 4, name: 'i4', parentId: 3 },
 *   { id: 3, name: 'i3', parentId: 2 },
 *   { id: 8, name: 'i8', parentId: 7 },
 * ]
 * 转换后
 * {
 *   id: 1,
 *   name: 'i1',
 *   children: [
 *     { id: 2, name: 'i2', parentId: 1, children: [...] },
 *   ]
 * }
 */
function convert2Tree(arr, options) {
	const defaultOptions = {
		root: {},
		id: 'id',
		parentId: 'parentId',
		children: 'children'
	};
	options = { ...defaultOptions, ...options };
	const { root, id, parentId, children } = options;
	for (let item of array) {
		if (+root[id] === item[parentId]) {
			if (!root[children]) {
				root[children] = []
			}
			root[children].push(convert2Tree(arr, { ...options, root: item }))
		}
	}

	return root;
}

/**
 * 实现 setInterval
 * 1. 利用 setTimeout 实现 setInterval
 * 2. 利用 clearTimeout 实现 clearInterval
 */

/**
 * @param {Function} callback
 * @param {number} duration
 * @returns {number}
 * @example
 * mySetInterval(()=> {
 *   console.log('xxx');
 * }, 200);
 */
 
let timeMap = {};
let id = 0;
 
function mySetInterval(callback, duration) {
	let timeId = id;
	id++;
  	let fn = () => {
  		callback();
        timeMap[timeId] = setTimeout(() => {fn()}, duration);
    }
    timeMap[timeId] = setTimeout(fn, duration);
	return timeId;
}

/**
 * @param {number} timer
 * @returns {void}
 * @example
 * const timer = mySetInterval(()=> {
 *   console.log('xxx');
 * }, 200);
 * setTimeout(() => {
 *   myClearInterval(timer);
 * }, 1000);
 */
function myClearInterval(timer) {
	clearTimeout(timeMap[timer]) 
	delete timeMap[timer]
}


